{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAU,CAAC,EAAE;IAC3B,OAAO,IAAI,OAAO,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE;QACtC,UAAU,CAAC,WAAY;YACrB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACvE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;KACd,CAAC,CAAC;CACJ,AAAC;AAEF,uCAAuC;AAEvC,uCAAuC;AAEvC,MAAM,aAAa,GAAG,SAAU,QAAQ,EAAE;IACxC,MAAM,MAAM,GAAG,CAAC;;;;;;EAMhB,CAAC;IACD,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;IAC/B,QAAQ,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;CACnD;AAED,MAAM,WAAW,GAAG,iBAAkB;IACpC,IAAI;QACF,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,2EAA2E,CAAC,AAAC;QAErG,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,AAAC;QAE9B,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QAE/D,IAAI,EAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAC3B,MAAM,GAAG;YACP,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB;QAED,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,MAAM,MAAM,GAAG,CAAC;;oBAEA,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC;;kBAEvC,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;uEASsC,EAAE,MAAM,CAAC,WAAW,CAAC;;;;;;;sEAOtB,EAAE,MAAM,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgChF,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,GAAK,CAAC;;;;;0CAKD,EAAE,GAAG,CAAC,QAAQ,CAAC;;0CAEf,EAAE,GAAG,CAAC,IAAI,CAAC;eACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;;QAGzB,CAAC,CACF,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;4CAM2B,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;kBAK7C,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;IASjC,CAAC;QACD,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;QAC/B,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KAE1D,CAAC,OAAO,GAAG,EAAE;QACZ,KAAK,CAAC,GAAG,CAAC,CAAC;KACZ;CACF;AAED,WAAW,EAAE,CAAC","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst renderSpinner = function (parentEl) {\n  const markup = `\n    <div class=\"spinner\">\n      <svg>\n        <use href=\"src/img/icons.svg#icon-loader\"></use>\n      </svg>\n    </div>\n  `\n  recipeContainer.innerHTML = \"\";\n  parentEl.insertAdjacentHTML(\"afterbegin\", markup);\n}\n\nconst showRecipes = async function () {\n  try {\n    const res = await fetch(\"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\");\n\n    const data = await res.json();\n\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`)\n\n    let { recipe } = data.data;\n    recipe = {\n      cookingTime: recipe.cooking_time,\n      id: recipe.id,\n      image: recipe.image_url,\n      ingredients: recipe.ingredients,\n      servings: recipe.servings,\n      sourceUrl: recipe.source_url,\n      publisher: recipe.publisher,\n      title: recipe.title\n    }\n\n    console.log(recipe);\n\n    const markup = `\n      <figure class=\"recipe__fig\">\n          <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n        ${recipe.ingredients.map((ing) => `\n          <li class=\"recipe__ingredient\">\n            <svg class=\"recipe__icon\">\n              <use href=\"src/img/icons.svg#icon-check\"></use>\n            </svg>\n            <div class=\"recipe__quantity\">${ing.quantity}</div>\n            <div class=\"recipe__description\">\n               <span class=\"recipe__unit\">${ing.unit}</span>\n               ${ing.description}\n            </div>\n         </li>\n        `\n      ).join(\"\")}\n      </div>\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"${recipe.sourceUrl}\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n            </svg>\n          </a>\n      </div>\n    `\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML(\"afterbegin\", markup);\n\n  } catch (err) {\n    alert(err);\n  }\n}\n\nshowRecipes();"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}